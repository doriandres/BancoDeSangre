// <auto-generated />
using System;
using BancoDeSangre.Services.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BancoDeSangre.Migrations
{
    [DbContext(typeof(DataBaseService))]
    [Migration("20190403035205_InitialLocalCreate")]
    partial class InitialLocalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BancoDeSangre.Models.BloodRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BloodType");

                    b.Property<int>("MedicalCenterId");

                    b.Property<int>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("MedicalCenterId");

                    b.ToTable("BloodRequests");
                });

            modelBuilder.Entity("BancoDeSangre.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndTime");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int>("ManagerId");

                    b.Property<string>("Place");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("BancoDeSangre.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<int>("BloodType");

                    b.Property<DateTime>("Date");

                    b.Property<int>("DonorId");

                    b.Property<int>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("DonorId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("BancoDeSangre.Models.Donor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BloodType");

                    b.Property<DateTime>("BornDate");

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<double>("Height");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("SecondLastName");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("BancoDeSangre.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("BancoDeSangre.Models.MedicalCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("Place");

                    b.HasKey("Id");

                    b.ToTable("MedicalCenters");
                });

            modelBuilder.Entity("BancoDeSangre.Models.BloodRequest", b =>
                {
                    b.HasOne("BancoDeSangre.Models.MedicalCenter", "MedicalCenter")
                        .WithMany("BloodRequests")
                        .HasForeignKey("MedicalCenterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BancoDeSangre.Models.Campaign", b =>
                {
                    b.HasOne("BancoDeSangre.Models.Manager", "Manager")
                        .WithMany("Campaigns")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BancoDeSangre.Models.Donation", b =>
                {
                    b.HasOne("BancoDeSangre.Models.Donor", "Donor")
                        .WithMany("Donations")
                        .HasForeignKey("DonorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
